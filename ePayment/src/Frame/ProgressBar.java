/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import java.io.IOException;
import java.io.InputStream;
import javax.imageio.ImageIO;
import Karyawan.*;
import Frame.*;
import Owner.*;
import javax.swing.ImageIcon;

/**
 *
 * @author Tria
 */
public class ProgressBar extends javax.swing.JFrame {

    Timer timer;
    ActionListener action;
    
    public ProgressBar() {
        initComponents();
              ImageIcon img = new ImageIcon("src/Image/LogoAplikasi.png");
            this.setIconImage(img.getImage());
        setLocationRelativeTo(this);
        aksi();
        timer = new Timer(100, action);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressbar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        progressbar.setBackground(new java.awt.Color(205, 31, 31));
        progressbar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        progressbar.setForeground(new java.awt.Color(205, 31, 31));
        getContentPane().add(progressbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 415, 680, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/progressBar.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgressBar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar progressbar;
    // End of variables declaration//GEN-END:variables

    private void aksi() {
        action = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                progressbar.setValue(progressbar.getValue() + 3);
                progressbar.setStringPainted(true);
                if (progressbar.getPercentComplete() == 1.0) {
                    timer.stop();
                    if (Login.admin) {
                        DashboardOwner admin1 = new DashboardOwner();
                        admin1.setVisible(true);
                        dispose();
                    } else {
                        DashboardKaryawan karyawan = new DashboardKaryawan();
                        karyawan.setVisible(true);
                        dispose();

                    }

                }
            }
        };
    }

}
